#!/bin/zsh
emulate zsh

FZF_COLORS="
--color=fg:regular:green:dim,fg+:regular:bright-green:dim
--color=hl:regular:red:dim:bold,hl+:regular:yellow:dim:bold
--color=bg:234,bg+:0
--color=pointer:#fabd2f,marker:#fe8019,spinner:#b8bb26
--color=header:#fb4934,prompt:#b16286
"
FZF_FILE_PREVIEW="([[ -f {} ]] && (bat --style=numbers --color=always -- {}))"
FZF_DIR_PREVIEW="([[ -d {} ]] && (exa -T {} | less))"
# FZF_BIN_PREVIEW="([[ \$(file --mime-type -b {}) = *binary* ]] && (echo {} is a binary file))"

export FZF_FILE_PREVIEW FZF_DIR_PREVIEW FZF_BIN_PREVIEW
# --preview-window=':hidden,right:60%'

export FZF_DEFAULT_OPTS="
--prompt '❱ '
--pointer '➤'
--marker '┃'
--cycle
$FZF_COLORS
--reverse --min-height 14 --ansi
--bind=ctrl-s:toggle-sort
--bind=alt-p:preview-up,alt-n:preview-down
--bind=ctrl-k:preview-up,ctrl-j:preview-down
--bind=ctrl-u:half-page-up,ctrl-d:half-page-down
--bind=alt-,:first,alt-.:last,change:first"
# --bind='?:toggle-preview,alt-w:toggle-preview-wrap'
# --preview \"echo ($FZF_FILE_PREVIEW || $FZF_DIR_PREVIEW) | head -200\"
# --bind='alt-a:select-all,ctrl-r:toggle-all'
# --bind='ctrl-b:execute(bat --paging=always -f {+})'

ZERODIR=$(dirname $0)
0="${ZERO:-${${0:#$ZSH_ARGZERO}:-${(%):-%N}}}"
0="${${(M)0:#/*}:-$PWD/$0}"
ARGZERO=$0

if (( ZDEBUG )); then
  emulate -L zsh -o err_return -o no_unset -o xtrace
  print -rn -- $'\e]0;ZDEBUG\a' >$TTY
  # export PROFILE_STARTUP=true
fi

accept(){
  # [[ $# -ge 1 ]] || return 1
  local editor=$1
  while read add sub file; do
    echo $file;
    # ${ZERODIR}/nvr $HOME/$file
  done
}
local clipcatctl="/home/chris/Documents/clipcat/target/debug/clipcatctl"
fzfs(){
  (){
    cat - | sort | uniq | sort 
  } < <(${clipcatctl} info) > >(fzf_list)
}

searcher(){
  typeset -a clipcatsearch=(${clipcatctl} "search" --shell --context)
  local q=${1}
  clipcatsearch+=(${q})
  while read -A line; do # id ts ts2 size ctype context; do 
    # local cid=${${(s:=:)id}:1}  # cts=${${(@s:=:)ts}[@]}
    # echo $cid $cts
    # echo $id $ts $size $ctype $context
    echo ${(q)line[2,3]}
    for i in ${(qq)line}; do 
      # echo eval "${(qq)i}";
    done
    # eval "${line}";
    # noglob typeset -pm CLIP_*
    echo "${CLIP_TIMESTAMP}" "${CLIP_CONTEXT}";
    # echo ${CLIP_ID}
  done < <(${clipcatsearch[@]})
}

previewer(){
  {
    typeset -A clipinfo=("" "")
    echo ${@}
    print -v clipstat -raC4 -- ${(kv)clipinfo}
    header=$(echo ${clipstat})
    echo ${(l[${FZF_PREVIEW_COLUMNS}][─])}
    echo ${header}
    echo ${(l[${FZF_PREVIEW_COLUMNS}][─])}
    clipstat="\n\n$(${clipcatctl} get ${1})"
    echo ${clipstat}
  }
} > >(bat -l lua --color=always --style "snip")
# typeset -a binds=("enter:accept-non-empty" "change:first" "ctrl-space:execute(nvr {})" "ctrl-g:reload:$0 all")
typeset -a binds=("change:reload:${clipcatctl} search -C {q}" "ctrl-space:reload:${clipcatctl} search {q}")
typeset -a previewer=("$ARGZERO" "previewer" '{q}' '{2}' '{1} {2} {3} "{4,5}" {6} {7} {8} {9}' ) bind=('--bind')

fzf_list(){
  print -v HEADER -f "Clipboard Selection"
  local -a bindsa=(${bind:^^binds})
  echo ${bindsa}
  local WHFZF="fzf" # ,~4,+3/2"
  {
    {cat /dev/stdin} | \
      ${WHFZF} --header "${HEADER}"\
      --tabstop=2 \
      ${bindsa} \
      --delimiter=" " --nth=2.. --with-nth=2,4,5,7,9\
      --preview-window="down,68%,border-rounded,nofollow,nohidden"\
      -1 --preview="${previewer}" --header-first
  } > >(accept nvr)
}

{
  typeset -a cmd=()
  LISTER=${1:-${stdinput[@]}}
  case "$LISTER" in
    accept) echo ${@:2} | accept nvr;
    ;;
  searcher) searcher ${@:2};
    ;;
  previewer) previewer ${@:2};
    ;;
    *)   fzfs listclips
    ;;
  esac
}
